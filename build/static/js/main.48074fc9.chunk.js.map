{"version":3,"sources":["components/SightingContentFilter.js","components/SightingContentItem.js","components/SightingContentDisplay.js","components/SpeciesContentItem.js","components/SpeciesContentFilter.js","components/SpeciesContentDisplay.js","components/LocationContentItem.js","components/LocationContentFilter.js","components/LocationContentDisplay.js","components/MainDisplay.js","App.js","serviceWorker.js","index.js"],"names":["SightingContentFilter","props","onFilter","pageOptions","noPages","Math","ceil","resultsCount","i","push","value","label","className","initialValues","speciesFilter","locationFilter","dateFilter","pageFilter","rarityFilter","onSubmit","values","setSubmitting","isSubmitting","handleChange","handleBlur","handleReset","dirty","htmlFor","name","id","type","onChange","onBlur","disabled","onClick","SightingContentItem","picture","item","src","alt","contentItemClass","rarity","pk","species_text","location_text","date","comments","SightingContentDisplay","state","queryset","refreshList","bind","filter","url","this","axios","get","then","res","setState","data","results","count","listItems","length","map","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","React","Component","SpeciesContentItem","split","birbSighting","birbsighting_set_text","rarity_text","SpeciesContentFilter","nameFilter","SpeciesContentDisplay","LocationContentItem","species_set_text","LocationContentFilter","LocationContentDisplay","MainDisplay","role","href","aria-selected","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48074fc9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nfunction SightingContentFilter(props) {\r\n    let onFilter = props.onFilter\r\n    \r\n    let pageOptions = []\r\n    let noPages = Math.ceil(props.resultsCount / 100)\r\n    for (let i=1; i <= noPages; i++) {\r\n        pageOptions.push(<option value={i} label={i} />)\r\n    }\r\n    \r\n    return(\r\n    <div className=\"row\"><div className=\"col p-3\">\r\n    \r\n        <Formik\r\n            initialValues = {{ speciesFilter : '', locationFilter : '', dateFilter: '', pageFilter: 1, rarityFilter: ''}}\r\n            \r\n            onSubmit={(values, {setSubmitting})=> {\r\n                onFilter(values.speciesFilter, values.locationFilter, values.dateFilter, values.pageFilter, values.rarityFilter)\r\n                setSubmitting(false);\r\n            }}\r\n            \r\n        >{({isSubmitting, values, handleChange, handleBlur, handleReset, dirty})=>(\r\n        \r\n            <Form>\r\n            \r\n            <div className=\"row\">\r\n            \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='sightingSpeciesFilter'>Species</label>\r\n                    <Field name='speciesFilter' id='sightingSpeciesFilter' type='text' className=\"form-control\"/>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='sightingLocationFilter'>Location</label>\r\n                    <Field name='locationFilter' id='sightingLocationFilter' type='text' className=\"form-control\"/>\r\n                  </div>\r\n                </div>\r\n              \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='sightingDateFilter'>Date</label>\r\n                    <Field name='dateFilter' id='sightingDateFilter' type='date' className=\"form-control\"/>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='sightingRarityFilter'>Rarity</label>\r\n                    <select\r\n                        name='rarityFilter'\r\n                        className=\"form-control\"\r\n                        id='sightingRarityFilter'\r\n                        value={values.rarityFilter}\r\n                        onChange = {handleChange}\r\n                        onBlur = {handleBlur}\r\n                    >\r\n                        <option value=\"\" label=\"All\"/>\r\n                        <option value=\"C\" label=\"Common\"/>\r\n                        <option value=\"U\" label=\"Uncommon\"/>\r\n                        <option value=\"R\" label=\"Rare\"/>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='sightingPageFilter'>Page</label>\r\n                    <select\r\n                        name='pageFilter'\r\n                        className=\"form-control\"\r\n                        id='sightingPageFilter'\r\n                        value={values.pageFilter}\r\n                        onChange = {handleChange}\r\n                        onBlur = {handleBlur}\r\n                    >\r\n                        {pageOptions}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n              \r\n            <div className=\"row\"><div className=\"col\">\r\n              <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-info\">\r\n                Filter\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={()=>{\r\n                    onFilter('', '', '', 1, '')\r\n                    handleReset()\r\n                }}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div></div>\r\n              \r\n            </Form>\r\n            \r\n        )}</Formik>\r\n        \r\n    </div></div>\r\n    )\r\n}\r\n\r\nexport default SightingContentFilter","import React from 'react'\r\n\r\nfunction SightingContentItem(props) {\r\n    \r\n    let picture\r\n    if (props.item.picture) {\r\n        picture = <img src={props.item.picture} alt=\"bird sighting\" className='img-fluid'/>\r\n    }\r\n    \r\n    let contentItemClass = \"content-item-\" + props.item.rarity\r\n    \r\n    return (\r\n        <div id={props.item.pk} className=\"col-lg-6 my-2\"><div className={\"border border-secondary rounded p-3 p-lg-5 h-100 content-item \" + contentItemClass}>\r\n            <h2>{props.item.species_text}</h2>\r\n            {picture}\r\n            <br />\r\n            <p><strong>Rarity:</strong> {props.item.rarity}</p>\r\n            <p><strong>Location:</strong> {props.item.location_text}</p>\r\n            <p><strong>Date:</strong> {props.item.date}</p>\r\n            <p><strong>Comments:</strong> {props.item.comments}</p>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default SightingContentItem","import React from 'react'\r\nimport axios from 'axios'\r\nimport SightingContentFilter from './SightingContentFilter'\r\nimport SightingContentItem from './SightingContentItem'\r\n\r\nclass SightingContentDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            queryset: [],\r\n            speciesFilter: '',\r\n            locationFilter: '',\r\n            rarityFilter: '',\r\n            dateFilter: '',\r\n            pageFilter: 1,\r\n            resultsCount: 0,\r\n        }\r\n        \r\n        this.refreshList = this.refreshList.bind(this)\r\n        this.filter = this.filter.bind(this)\r\n    }\r\n    \r\n    refreshList() {\r\n        \r\n        let url = 'https://lwbjbirbblog.herokuapp.com/dataapis/birbsighting/?'\r\n        url += 'species=' + this.state.speciesFilter + '&'\r\n        url += 'location=' + this.state.locationFilter + '&'\r\n        url += 'rarity=' + this.state.rarityFilter + '&'\r\n        url += 'date=' + this.state.dateFilter + '&'\r\n        url += 'page=' + this.state.pageFilter\r\n        \r\n        axios.get(url)\r\n        .then(\r\n            res=>this.setState({queryset: res.data.results, resultsCount: res.data.count})\r\n        )\r\n    }\r\n    \r\n    filter(speciesFilter, locationFilter, dateFilter, pageFilter, rarityFilter) {\r\n        \r\n        this.setState({ \r\n            speciesFilter : speciesFilter,\r\n            locationFilter : locationFilter,\r\n            dateFilter : dateFilter,\r\n            pageFilter : pageFilter,\r\n            rarityFilter : rarityFilter,\r\n        }, ()=>this.refreshList())\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    \r\n    render(){\r\n        \r\n        let listItems\r\n        if (this.state.queryset.length === 0 ) {\r\n            listItems = <h3>Nothing here!</h3>\r\n        } else {\r\n            listItems = this.state.queryset.map(data => <SightingContentItem item={data}/>)\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\"><div className=\"col p-0\">\r\n              <nav class=\"navbar navbar-expand-lg mt-2 p-0\">\r\n                  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#SightingContentFilterNavbar\" aria-controls=\"SightingContentFilterNavbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <button class=\"btn btn-secondary\">Expand Filter</button>\r\n                  </button>\r\n                  \r\n                  <div class=\"collapse navbar-collapse\" id=\"SightingContentFilterNavbar\">\r\n                    <div className=\"container-fluid\">\r\n                        <SightingContentFilter onFilter={this.filter} resultsCount={this.state.resultsCount}/>\r\n                    </div>\r\n                  </div>\r\n              </nav>\r\n              </div></div>\r\n              \r\n              <div className=\"row justify-content-between\">\r\n                {listItems}\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SightingContentDisplay","import React from 'react'\r\n\r\nfunction SpeciesContentItem(props) {\r\n    let picture\r\n    if (props.item.picture) {\r\n        picture = <img src={props.item.picture} alt=\"birb\" className=\"img-fluid\"/>\r\n    }\r\n    \r\n    let location_text = (props.item.location_text + '').split(',').map(i => <li>{i}</li>)\r\n    let birbSighting = (props.item.birbsighting_set_text + '').split(',').map(i => <li>{i}</li>)\r\n    let contentItemClass = \"content-item-\" + props.item.rarity_text\r\n    \r\n    return (\r\n        <div id={props.item.pk} className=\"col-lg-6 my-2\"><div className={\"border border-secondary rounded p-3 p-lg-5 h-100 content-item \" + contentItemClass }>\r\n          <h2>{props.item.name}</h2>\r\n          {picture}\r\n          <br />\r\n          <p><strong>Rarity:</strong> {props.item.rarity_text}</p>\r\n          <p><strong>Locations:</strong></p>  <ul>{location_text}</ul>\r\n          <p><strong>Sightings:</strong></p>  <ul>{birbSighting}</ul>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default SpeciesContentItem","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nfunction SpeciesContentFilter(props) {\r\n    let onFilter = props.onFilter\r\n    \r\n    let pageOptions = []\r\n    let noPages = Math.ceil(props.resultsCount / 100)\r\n    for (let i=1; i <= noPages; i++) {\r\n        pageOptions.push(<option value={i} label={i} />)\r\n    }\r\n    \r\n    return(\r\n    <div className=\"row\"><div className=\"col p-3\">\r\n\r\n        <Formik\r\n            initialValues = {{ nameFilter: '', pageFilter: 1, rarityFilter: ''}}\r\n            \r\n            onSubmit={(values, {setSubmitting})=> {\r\n                onFilter(values.nameFilter, values.pageFilter, values.rarityFilter)\r\n                setSubmitting(false);\r\n            }}\r\n            \r\n        >{({isSubmitting, values, handleChange, handleBlur, handleReset, dirty})=>(\r\n        \r\n            <Form>            \r\n            \r\n            <div className=\"row\">\r\n            \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='speciesNameFilter'>Name</label>\r\n                    <Field name='nameFilter' id='speciesNameFilter' type='text' className=\"form-control\"/>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='speciesRarityFilter'>Rarity</label>\r\n                    <select\r\n                        name='rarityFilter'\r\n                        id='speciesRarityFilter'\r\n                        value={values.rarityFilter}\r\n                        onChange = {handleChange}\r\n                        onBlur = {handleBlur}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option value=\"\" label=\"All\"/>\r\n                        <option value=\"C\" label=\"Common\"/>\r\n                        <option value=\"U\" label=\"Uncommon\"/>\r\n                        <option value=\"R\" label=\"Rare\"/>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='speciesPageFilter'>Page</label>\r\n                    <select\r\n                        name='pageFilter'\r\n                        id='speciesPageFilter'\r\n                        value={values.pageFilter}\r\n                        onChange = {handleChange}\r\n                        onBlur = {handleBlur}\r\n                        className=\"form-control\"\r\n                    >\r\n                        {pageOptions}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\"><div className=\"col\">\r\n              \r\n              <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-info\">\r\n                Filter\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={()=>{\r\n                    onFilter('', 1, '')\r\n                    handleReset()\r\n                }}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n              \r\n            </div></div>\r\n            \r\n            </Form>\r\n            \r\n        )}</Formik>\r\n        \r\n    </div></div>\r\n    )\r\n}\r\n\r\nexport default SpeciesContentFilter","import React from 'react'\r\nimport axios from 'axios'\r\nimport SpeciesContentItem from './SpeciesContentItem'\r\nimport SpeciesContentFilter from './SpeciesContentFilter'\r\n\r\nclass SpeciesContentDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            queryset : [],\r\n            nameFilter : '',\r\n            pageFilter : 1,\r\n            rarityFilter : '',\r\n            resultsCount : 0,\r\n        }\r\n        \r\n        this.refreshList = this.refreshList.bind(this)\r\n        this.filter = this.filter.bind(this)\r\n    }\r\n    \r\n    refreshList() {\r\n        let url = 'https://lwbjbirbblog.herokuapp.com/dataapis/species/?'\r\n        url += \"name=\" + this.state.nameFilter + '&'\r\n        url += \"rarity=\" + this.state.rarityFilter + '&'\r\n        url += \"page=\" + this.state.pageFilter\r\n        \r\n        axios.get(url)\r\n        .then(\r\n            res => this.setState({queryset: res.data.results, resultsCount : res.data.count })\r\n        )\r\n    }\r\n    \r\n    filter(nameFilter, pageFilter, rarityFilter) {\r\n        this.setState({nameFilter: nameFilter, pageFilter: pageFilter, rarityFilter : rarityFilter}, ()=>{this.refreshList()})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    \r\n    render() {\r\n        let listItems\r\n        if (this.state.queryset.length === 0) {\r\n            listItems = <h2 className=\"p-5 my-2\">Nothing here!</h2>\r\n        } else {\r\n            listItems = this.state.queryset.map(i => <SpeciesContentItem item={i} />)\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\"><div className=\"col p-0\">\r\n                <nav class=\"navbar navbar-expand-lg mt-2 p-0\">\r\n                  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#SpeciesContentFilterNavbar\" aria-controls=\"SpeciesContentFilterNavbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <button class=\"btn btn-secondary\">Expand Filter</button>\r\n                  </button>\r\n                  \r\n                  <div class=\"collapse navbar-collapse\" id=\"SpeciesContentFilterNavbar\">\r\n                    <div className=\"container-fluid\">\r\n                        <SpeciesContentFilter onFilter={this.filter} resultsCount={this.state.resultsCount} />\r\n                    </div>\r\n                  </div>\r\n                </nav>\r\n                </div></div>\r\n                    \r\n                <div className=\"row justify-content-between\">\r\n                    {listItems}\r\n                </div>\r\n                    \r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default SpeciesContentDisplay","import React from 'react'\r\n\r\nfunction LocationContentItem(props) {\r\n    \r\n    let species_set_text = (props.item.species_set_text + '').split(',').map(i => <li>{i}</li>)\r\n    let birbSighting = (props.item.birbsighting_set_text + '').split(',').map(i => <li>{i}</li>)\r\n    \r\n    return (\r\n        <div id={props.item.pk} className=\"col-lg-6 my-2\"><div className=\"border border-secondary rounded p-3 p-lg-5 h-100 content-item\">\r\n          <h2>{props.item.name}</h2>\r\n          <br />\r\n          <p><strong>Species:</strong></p> <ul>{species_set_text}</ul>\r\n          <p><strong>Sightings:</strong></p> <ul>{birbSighting}</ul>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default LocationContentItem","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nfunction LocationContentFilter(props) {\r\n    let onFilter = props.onFilter\r\n    \r\n    let pageOptions = []\r\n    let noPages = Math.ceil(props.resultsCount / 100)\r\n    for (let i=1; i <= noPages; i++) {\r\n        pageOptions.push(<option value={i} label={i} />)\r\n    }\r\n    \r\n    return(\r\n    <div className=\"row\"><div className=\"col p-3\">\r\n\r\n        <Formik\r\n            initialValues = {{ nameFilter: '', pageFilter: 1}}\r\n            \r\n            onSubmit={(values, {setSubmitting})=> {\r\n                onFilter(values.nameFilter, values.pageFilter)\r\n                setSubmitting(false);\r\n            }}\r\n            \r\n        >{({isSubmitting, values, handleChange, handleBlur, handleReset, dirty})=>(\r\n        \r\n            <Form>            \r\n            \r\n            <div className=\"row\">\r\n            \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='locationNameFilter'>Name</label>\r\n                    <Field name='nameFilter' id='locationNameFilter' type='text' className=\"form-control\"/>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-sm-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor='locationPageFilter'>Page</label>\r\n                    <select\r\n                        name='pageFilter'\r\n                        id='locationPageFilter'\r\n                        value={values.pageFilter}\r\n                        onChange = {handleChange}\r\n                        onBlur = {handleBlur}\r\n                        className=\"form-control\"\r\n                    >\r\n                        {pageOptions}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\"><div className=\"col\">\r\n              \r\n              <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-info\">\r\n                Filter\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={()=>{\r\n                    onFilter('', 1)\r\n                    handleReset()\r\n                }}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n              \r\n            </div></div>\r\n            \r\n            </Form>\r\n            \r\n        )}</Formik>\r\n        \r\n    </div></div>\r\n    )\r\n}\r\n\r\nexport default LocationContentFilter","import React from 'react'\r\nimport axios from 'axios'\r\nimport LocationContentItem from './LocationContentItem'\r\nimport LocationContentFilter from './LocationContentFilter'\r\n\r\nclass LocationContentDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            queryset : [],\r\n            nameFilter : '',\r\n            pageFilter : 1,\r\n            resultsCount : 0,\r\n        }\r\n        \r\n        this.refreshList = this.refreshList.bind(this)\r\n        this.filter = this.filter.bind(this)\r\n    }\r\n    \r\n    refreshList() {\r\n        let url = 'https://lwbjbirbblog.herokuapp.com/dataapis/location/?'\r\n        url += \"name=\" + this.state.nameFilter + '&'\r\n        url += \"page=\" + this.state.pageFilter\r\n        \r\n        axios.get(url)\r\n        .then(\r\n            res => this.setState({queryset: res.data.results, resultsCount : res.data.count })\r\n        )\r\n    }\r\n    \r\n    filter(nameFilter, pageFilter) {\r\n        this.setState({nameFilter: nameFilter, pageFilter: pageFilter}, ()=>{this.refreshList()})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    \r\n    render() {\r\n        let listItems\r\n        if (this.state.queryset.length === 0) {\r\n            listItems = <p>Nothing here!</p>\r\n        } else {\r\n            listItems = this.state.queryset.map(i => <LocationContentItem item={i}/>)\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\"><div className=\"col p-0\">\r\n                <nav class=\"navbar navbar-expand-lg mt-2 p-0\">\r\n                  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#LocationContentFilterNavbar\" aria-controls=\"LocationContentFilterNavbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <button class=\"btn btn-secondary\">Expand Filter</button>\r\n                  </button>\r\n                  \r\n                  <div class=\"collapse navbar-collapse\" id=\"LocationContentFilterNavbar\">\r\n                    <div className=\"container-fluid\">\r\n                      <LocationContentFilter onFilter={this.filter} resultsCount={this.state.resultsCount} />\r\n                    </div>\r\n                  </div>\r\n                </nav>\r\n                </div></div>\r\n                \r\n                <div className=\"row justify-content-between\">\r\n                  {listItems}\r\n                </div>\r\n            \r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default LocationContentDisplay","import React from 'react'\r\nimport SightingContentDisplay from './SightingContentDisplay'\r\nimport SpeciesContentDisplay from './SpeciesContentDisplay'\r\nimport LocationContentDisplay from './LocationContentDisplay'\r\n\r\nfunction MainDisplay(props) {\r\n    return(    \r\n      <div className=\"container\"><div className=\"row\"><div className=\"col\">\r\n      \r\n        <ul class=\"nav nav-tabs px-2\" id=\"myTab\" role=\"tablist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active tabbo\" id=\"SightingContentDisplay-tab\" data-toggle=\"tab\" href=\"#SightingContentDisplay\" role=\"tab\" aria-controls=\"SightingContentDisplay\" aria-selected=\"true\">Sightings</a>\r\n          </li>\r\n          \r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link tabbo\" id=\"SpeciesContentDisplay-tab\" data-toggle=\"tab\" href=\"#SpeciesContentDisplay\" role=\"tab\" aria-controls=\"SpeciesContentDisplay\" aria-selected=\"false\">Species</a>\r\n          </li>\r\n        \r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link tabbo\" id=\"LocationContentDisplay-tab\" data-toggle=\"tab\" href=\"#LocationContentDisplay\" role=\"tab\" aria-controls=\"LocationContentDisplay\" aria-selected=\"false\">Locations</a>\r\n          </li>\r\n        </ul>\r\n        \r\n        <div class=\"tab-content\" id=\"myTabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"SightingContentDisplay\" role=\"tabpanel\" aria-labelledby=\"SightingContentDisplay-tab\">\r\n            <SightingContentDisplay />\r\n          </div>\r\n        \r\n          <div class=\"tab-pane fade p-0\" id=\"SpeciesContentDisplay\" role=\"tabpanel\" aria-labelledby=\"SpeciesContentDisplay-tab\">\r\n            <SpeciesContentDisplay />\r\n          </div>\r\n        \r\n          <div class=\"tab-pane fade\" id=\"LocationContentDisplay\" role=\"tabpanel\" aria-labelledby=\"LocationContentDisplay-tab\">\r\n            <LocationContentDisplay />\r\n          </div>\r\n        </div>\r\n\r\n      </div></div></div>\r\n    )\r\n}\r\n\r\nexport default MainDisplay      ","import React from 'react';\nimport './app.css'\nimport MainDisplay from './components/MainDisplay'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"container-fluid border-light mb-3\">\n        <div className=\"row\"><div className=\"col p-5\">\n          <h1 className=\"text-center\">LWBJ's Birb Blog</h1>\n        </div></div>\n      </header>\n      \n      <MainDisplay />\n      \n      <footer className=\"container-fluid p-4 mt-5\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <p>By LWBJ</p>\n          </div>\n        </div>\n      </footer>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}